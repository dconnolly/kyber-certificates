



LAMPS                                                          S. Turner
Internet-Draft                                                     sn3rd
Intended status: Standards Track                           P. Kampanakis
Expires: 24 April 2025                                        J. Massimo
                                                                     AWS
                                                           B. Westerbaan
                                                              Cloudflare
                                                         21 October 2024


  Internet X.509 Public Key Infrastructure - Algorithm Identifiers for
       Module-Lattice-Based Key-Encapsulation Mechanism (ML-KEM)
               draft-ietf-lamps-kyber-certificates-latest

Abstract

   Module-Lattice-Based Key-Encapsulation Mechanism (ML-KEM) is a
   quantum-resistant key-encapsulation mechanism (KEM).  This document
   specifies algorithm identifiers and ASN.1 encoding format for ML-KEM
   in public key certificates.  The encoding for public and private keys
   are also provided.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at https://lamps-
   wg.github.io/kyber-certificates/#go.draft-ietf-lamps-kyber-
   certificates.html.  Status information for this document may be found
   at https://datatracker.ietf.org/doc/draft-ietf-lamps-kyber-
   certificates/.

   Discussion of this document takes place on the Limited Additional
   Mechanisms for PKIX and SMIME (lamps) Working Group mailing list
   (mailto:spasm@ietf.org), which is archived at
   https://mailarchive.ietf.org/arch/browse/spasm/.  Subscribe at
   https://www.ietf.org/mailman/listinfo/spasm/.

   Source for this draft and an issue tracker can be found at
   https://github.com/lamps-wg/kyber-certificates.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 24 April 2025.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
     1.1.  ASN.1 Module and ML-KEM Identifiers
     1.2.  Applicability Statement
   2.  Conventions and Definitions
   3.  Identifiers
   4.  Subject Public Key Fields
   5.  Private Key Format
   6.  ASN.1 Module
   7.  Security Considerations
   8.  IANA Considerations
   9.  References
     9.1.  Normative References
     9.2.  Informative References
   Appendix A.  Examples
     A.1.  Example Private Key
     A.2.  Example Public Key
     A.3.  Example Certificate
   Acknowledgments
   Authors' Addresses

1.  Introduction

   The Module-Lattice-Based Key-Encapsulation Mechanism (ML-KEM)
   standardized in [FIPS203] is a quantum-resistant key-encapsulation
   mechanism (KEM) standardized by the US National Institute of
   Standards and Technology (NIST) PQC Project [NIST-PQC].  Prior to
   standardization, the mechanism was known as Kyber.  ML-KEM and Kyber
   are not compatible.  This document specifies the use of ML-KEM in
   Public Key Infrastructure X.509 (PKIX) certificates [RFC5280] at
   three security levels: ML-KEM-512, ML-KEM-768, and ML-KEM-1024, using
   object identifiers assigned by NIST.

   This specification includes conventions for the subjectPublicKeyInfo
   field within Internet X.509 certificates [RFC5280], like [RFC3279]
   did for classic cryptography and [RFC5480] did for elliptic curve
   cryptography.  The private key format is also specified.

1.1.  ASN.1 Module and ML-KEM Identifiers

   An ASN.1 module [X680] is included for reference purposes.  Note that
   as per [RFC5280], certificates use the Distinguished Encoding Rules;
   see [X690].  Also note that NIST defined the object identifiers for
   the ML-KEM algorithms in an ASN.1 module; see (TODO insert
   reference).

1.2.  Applicability Statement

   ML-KEM certificates are used in protocols where the public key is
   used to generate and encapsulate a shared secret used to derive a
   symmetric key used to encrypt a payload; see
   [I-D.ietf-lamps-cms-kyber].  To be used in TLS, ML-KEM certificates
   could only be used as end-entity identity certificates and would
   require significant updates to the protocol; see
   [I-D.celi-wiggers-tls-authkem].

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Identifiers

   Certificates conforming to [RFC5280] can convey a public key for any
   public key algorithm.  The certificate indicates the algorithm
   through an algorithm identifier.  An algorithm identifier consists of
   an object identifier and optional parameters.

   The AlgorithmIdentifier type, which is included herein for
   convenience, is defined as follows:

    AlgorithmIdentifier{ALGORITHM-TYPE, ALGORITHM-TYPE:AlgorithmSet} ::=
      SEQUENCE {
        algorithm   ALGORITHM-TYPE.&id({AlgorithmSet}),
        parameters  ALGORITHM-TYPE.
                      &Params({AlgorithmSet}{@algorithm}) OPTIONAL
      }

      |  NOTE: The above syntax is from [RFC5912] and is compatible with
      |  the 2021 ASN.1 syntax [X680].  See [RFC5280] for the 1988 ASN.1
      |  syntax.

   The fields in AlgorithmIdentifier have the following meanings:

   *  algorithm identifies the cryptographic algorithm with an object
      identifier.

   *  parameters, which are optional, are the associated parameters for
      the algorithm identifier in the algorithm field.

   The AlgorithmIdentifier for a ML-KEM public key MUST use one of the
   id-alg-ml-kem object identifiers listed below, based on the security
   level.  The parameters field of the AlgorithmIdentifier for the ML-
   KEM public key MUST be absent.

   When any of the ML-KEM AlgorithmIdentifier appears in the
   SubjectPublicKeyInfo field of an X.509 certificate, the key usage
   certificate extension MUST only contain keyEncipherment
   Section 4.2.1.3 of [RFC5280].

     pk-ml-kem-512 PUBLIC-KEY ::= {
       IDENTIFIER id-alg-ml-kem-512
       -- KEY no ASN.1 wrapping --
       PARAMS ARE absent
       CERT-KEY-USAGE { keyEncipherment }
       --- PRIVATE-KEY no ASN.1 wrapping --
       }

     pk-ml-kem-768 PUBLIC-KEY ::= {
       IDENTIFIER id-alg-ml-kem-768
       -- KEY no ASN.1 wrapping --
       PARAMS ARE absent
       CERT-KEY-USAGE { keyEncipherment }
       --- PRIVATE-KEY no ASN.1 wrapping --
       }

     pk-ml-kem-1024 PUBLIC-KEY ::= {
       IDENTIFIER id-alg-ml-kem-1024
       -- KEY no ASN.1 wrapping --
       PARAMS ARE absent
       CERT-KEY-USAGE { keyEncipherment }
       --- PRIVATE-KEY no ASN.1 wrapping --
       }

       ML-KEM-PublicKey ::= OCTET STRING

       ML-KEM-PrivateKey ::= OCTET STRING

   No additional encoding of the ML-KEM public key value is applied in
   the SubjectPublicKeyInfo field of an X.509 certificate [RFC5280].
   However, whenever the ML-KEM public key value appears outside of a
   certificate, it MAY be encoded as an OCTET STRING.

   No additional encoding of the ML-KEM private key value is applied in
   the PrivateKeyInfo field of an Asymmetric Key Package [RFC5958].
   However, whenever the ML-KEM private key value appears outside of a
   Asymmetric Key Package, it MAY be encoded as an OCTET STRING.

      |  NOTE: As noted in Section 3, the values for these object
      |  identifers will be assigned by NIST.  Once assigned, they will
      |  be added to a future revision of this document.

4.  Subject Public Key Fields

   In the X.509 certificate, the subjectPublicKeyInfo field has the
   SubjectPublicKeyInfo type, which has the following ASN.1 syntax:

     SubjectPublicKeyInfo {PUBLIC-KEY: IOSet} ::= SEQUENCE {
         algorithm        AlgorithmIdentifier {PUBLIC-KEY, {IOSet}},
         subjectPublicKey BIT STRING
     }

      |  NOTE: The above syntax is from [RFC5912] and is compatible with
      |  the 2021 ASN.1 syntax [X680].  See [RFC5280] for the 1988 ASN.1
      |  syntax.

   The fields in SubjectPublicKeyInfo have the following meaning:

   *  algorithm is the algorithm identifier and parameters for the
      public key (see above).

   *  subjectPublicKey contains the byte stream of the public key.  The
      algorithms defined in this document always encode the public key
      as TODO pick format e.g., exact multiple of 8 bits?.

   Appendix A.2 contains an example of an id-alg-ml-kem-768 public key
   encoded using the textual encoding defined in [RFC7468].

5.  Private Key Format

   An ML-KEM private key is encoded by storing its 64-octet seed in the
   privateKey field as follows.

   [FIPS203] specifies two formats for an ML-KEM private key: a 64-octet
   seed and an (expanded) private key, which is referred to as the
   decapsulation key.  The expanded private key (and public key) is
   computed from the seed using ML-KEM.KeyGen_internal(d,z) (algorithm
   16) using the first 32 octets as _d_ and the remaining 32 octets as
   _z_.

   "Asymmetric Key Packages" [RFC5958] describes how to encode a private
   key in a structure that both identifies what algorithm the private
   key is for and allows for the public key and additional attributes
   about the key to be included as well.  For illustration, the ASN.1
   structure OneAsymmetricKey is replicated below.  The algorithm-
   specific details of how a private key is encoded are left for the
   document describing the algorithm itself.

     OneAsymmetricKey ::= SEQUENCE {
       version                  Version,
       privateKeyAlgorithm      SEQUENCE {
       algorithm                PUBLIC-KEY.&id({PublicKeySet}),
       parameters               PUBLIC-KEY.&Params({PublicKeySet}
                                  {@privateKeyAlgorithm.algorithm})
                                     OPTIONAL}
       privateKey               OCTET STRING (CONTAINING
                                  PUBLIC-KEY.&PrivateKey({PublicKeySet}
                                    {@privateKeyAlgorithm.algorithm})),
       attributes           [0] Attributes OPTIONAL,
       ...,
       [[2: publicKey       [1] BIT STRING (CONTAINING
                                  PUBLIC-KEY.&Params({PublicKeySet}
                                    {@privateKeyAlgorithm.algorithm})
                                    OPTIONAL,
       ...
     }

      |  NOTE: The above syntax is from [RFC5958] and is compatible with
      |  the 2021 ASN.1 syntax [X680].

   When used in a OneAsymmetricKey type, the privateKey OCTET STRING
   contains the raw octet string encoding of the 64-octet seed.

      |  NOTE: There exist some private key import functions that have
      |  not implemented the new ASN.1 structure OneAsymmetricKey that
      |  is defined in [RFC5958].  This means that they will not accept
      |  a private key structure that contains the public key field.
      |  This means a balancing act needs to be done between being able
      |  to do a consistency check on the key pair and widest ability to
      |  import the key.

   Appendix A.1 contains an example of an id-alg-ml-kem-768 private key
   encoded using the textual encoding defined in [RFC7468].

6.  ASN.1 Module

   TODO ASN.1 Module

7.  Security Considerations

   The Security Considerations section of [RFC5280] applies to this
   specification as well.

      |  To Do: Discuss side-channels for Kyber TBD1.

8.  IANA Considerations

   This document will have some IANA actions.

9.  References

9.1.  Normative References

   [FIPS203]  "Module-Lattice-Based Key-Encapsulation Mechanism
              Standard", National Institute of Standards and Technology,
              DOI 10.6028/nist.fips.203, August 2024,
              <https://doi.org/10.6028/nist.fips.203>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,
              Housley, R., and W. Polk, "Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 5280, DOI 10.17487/RFC5280, May 2008,
              <https://www.rfc-editor.org/rfc/rfc5280>.

   [RFC5912]  Hoffman, P. and J. Schaad, "New ASN.1 Modules for the
              Public Key Infrastructure Using X.509 (PKIX)", RFC 5912,
              DOI 10.17487/RFC5912, June 2010,
              <https://www.rfc-editor.org/rfc/rfc5912>.

   [RFC5958]  Turner, S., "Asymmetric Key Packages", RFC 5958,
              DOI 10.17487/RFC5958, August 2010,
              <https://www.rfc-editor.org/rfc/rfc5958>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [X680]     ITU-T, "Information technology - Abstract Syntax Notation
              One (ASN.1): Specification of basic notation", ITU-T
              Recommendation X.680, ISO/IEC 8824-1:2021, February 2021,
              <https://www.itu.int/rec/T-REC-X.680>.

   [X690]     ITU-T, "Information technology - Abstract Syntax Notation
              One (ASN.1): ASN.1 encoding rules: Specification of Basic
              Encoding Rules (BER), Canonical Encoding Rules (CER) and
              Distinguished Encoding Rules (DER)", ITU-T
              Recommendation X.690, ISO/IEC 8825-1:2021, February 2021,
              <https://www.itu.int/rec/T-REC-X.690>.

9.2.  Informative References

   [I-D.celi-wiggers-tls-authkem]
              Wiggers, T., Celi, S., Schwabe, P., Stebila, D., and N.
              Sullivan, "KEM-based Authentication for TLS 1.3", Work in
              Progress, Internet-Draft, draft-celi-wiggers-tls-authkem-
              04, 17 October 2024,
              <https://datatracker.ietf.org/doc/html/draft-celi-wiggers-
              tls-authkem-04>.

   [I-D.ietf-lamps-cms-kyber]
              Prat, J., Ounsworth, M., and D. Van Geest, "Use of ML-KEM
              in the Cryptographic Message Syntax (CMS)", Work in
              Progress, Internet-Draft, draft-ietf-lamps-cms-kyber-05,
              15 October 2024, <https://datatracker.ietf.org/doc/html/
              draft-ietf-lamps-cms-kyber-05>.

   [NIST-PQC] National Institute of Standards and Technology (NIST),
              "Post-Quantum Cryptography Project", 20 December 2016,
              <https://csrc.nist.gov/projects/post-quantum-
              cryptography>.

   [RFC3279]  Bassham, L., Polk, W., and R. Housley, "Algorithms and
              Identifiers for the Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 3279, DOI 10.17487/RFC3279, April
              2002, <https://www.rfc-editor.org/rfc/rfc3279>.

   [RFC5480]  Turner, S., Brown, D., Yiu, K., Housley, R., and T. Polk,
              "Elliptic Curve Cryptography Subject Public Key
              Information", RFC 5480, DOI 10.17487/RFC5480, March 2009,
              <https://www.rfc-editor.org/rfc/rfc5480>.

   [RFC7468]  Josefsson, S. and S. Leonard, "Textual Encodings of PKIX,
              PKCS, and CMS Structures", RFC 7468, DOI 10.17487/RFC7468,
              April 2015, <https://www.rfc-editor.org/rfc/rfc7468>.

Appendix A.  Examples

   This appendix contains examples of ML-KEM public keys, private keys
   and certificates.

A.1.  Example Private Key

   The following is an example of a ML-KEM-512 private key with hex seed
   0001…3f:

   -----BEGIN ML-KEM-768 PRIVATE KEY-----
   MIIGdAIBADALBglghkgBZQMEBAEEggZgcFVP1DY0TyeFsbOxusGEtmeQAzNsJvFa
   feh4xIJca+A/PEpID3W3SGqtMdOgBRhiP9IHq1KN1ichSVg1rgBiw2e3SnG68Qqt
   DoopAgdr4xNIvrFczAlXzeu0r/ImdWu8YBtlaKt4Ssuus0cC8PhqJiAhGLIrI/g1
   WHdsecFNupgzecgD4NzDFgoRdXAw5pxpGXmNgetpippEg6meWlyywxyaZheZ88yJ
   x5BwbqBBYpBF1CqDrtiIYOOUxpGH4hBdKMwU7Dk1ktZ90AqkP+i06uRBQAKGa1xx
   PGqNfRbPeLgZ1vEunlp0IzkI8LFePEuoMpxc3aVchJKOOqgGPlqpZ2QD+Rc1sRAQ
   x/WTCRNk3IZEW8gEhAqaIXJCEkafinsM4KxpjrhsrTmn9IJNmlFjqsIe5oCLBTyK
   P6ywtnRLUmK7yyakP2ZMhzK2TPx6zwmWBfQceWBgl2rEM4M/4AND+xgoMApCR0ER
   bktFuyduqBEpoNtMbmC85hEQHoxiVHSSXgIiZ5MIo+dwjRlyp7Qj6yMoUcNtLtU9
   PtO7dQBjcGGl3CKS+hxGbAc1RoMyi+wsHtLLXJm3jsoJaQOM98NN0RhyTjHK4IYg
   azQwK1IPXRd63tWzzOAqzOgI6ia8wHJiX9uT8XRYpfwdTaOUOAofV+nMZhCUOKB1
   8NKBP8xKGZzHbbOCPycLAGFZQZKUBBGjf/uvriwVAWXOxca/c8WV+5LNFTEmB9oH
   B3hlK9mUS8SLx9GlNDOLrQutZlbF1QLOeFCrFYckTutY9DmrXghXSnGMiqw9d8eY
   u6FUJzO+c0SPI/twwOU1OifIgyLFIYSTr7s4CGQ01tYKVrqIfdSYw6smoIcJk4Fa
   pqQJdfIYrcoVgtZP/IZS+7OppvvDBPkZRfpKrvKHj9cV33ARPSN59EiG+BLIP/K3
   GaaeHsdK5LFazNOu1aU852p7CYJHFjO5c8tAoaABXQpCT6EaR5wCMBdDbSopAOmT
   61oKBnQAx/Sq3yAfxPoxJkpjuulcyNZcOZWBXll9EENVzymqUzPJMlGGnVvNvkhx
   JPYCuLambBbEdhZIrXZc9dgAa1FekFp/CsB2sMYu+jKBU+fKVwFpnxMF8ea8b5Cw
   5JtpNRK2zpkqi4AW3fwaZix+P5YZy9hp3Xca8wiWzNWRisbLd0ZsXneZltZ/+aq8
   l1A/LHt+LQANhkUPsYB8pMq9pGWCWjHHiaG3pJGrOHJ2XTINC3GSD6ITyUCTQWuD
   uBJOafZeYstQANzDeqmg//c5cMR3LzV9JBicpvUwVWjA4jdqN2KmjGBeVjxdIJVy
   4Px1MsopRylTVWe1/EE8XoeS0kZFNsyAj5it10Zk8UFWb5AWqQpUGCmpigRkzkGo
   u0TC1Po8LCCUYHKO8UoafEybmNEiA7TMNSkWCpqy14OPf/a1OuBaoxp9ZGt6+mxF
   kyUmo8N1Vhm+mUwhHCoxwFs0R4NsshUL4YKdrmsExVNc/1RuOSunl0EXIPkk9JCl
   rFSV8hNW1VC3gqZMFoi2tlW8x4Qhl6Q0wvZWO1t/CaeLzEiCMng1YdFvTLq2dVQA
   BQeBVwxmYEuBetElIpRzbosBhhpLWnRRm4tv5RSJpQcjkuWHYmxxN3ZXXTOAahyO
   JzKvl8JoD1FmYzHE64u8BDHE+Wgy2vGzxFUo+6FT9seLHBmHApR8zTN3J6RvtTuh
   HeXLQZE0aFlRbLatckAPPPIJsjau81pYCsh+s+MPr9Zpc8qKfdJnWvQfehe2FDPN
   GvgPdwiGn2ZUiEl5gLGsEKDNy2NqAO2GgbNeQpEkyoA1ByW4X4Ol6sOko8wWAJA+
   ZSk1YLmzNuWvDVKdrBoEgRkwLLepvMEQuUhRvwIRfxmdxIWoUrdHPwm4MaaDHVtU
   wLeQ0iXPa7ktlGKibNsz3aUSPHqvDiaguDZV7qKL86gHRyUBj9a65LYBz2G6q3Gn
   o9NRl6ND50tKJywSXVQIlkJthbeVjTs4prqYfsNyJce0TNsS3eRTm0qwgjY2g/BL
   96CcxcQd/oMKGxYuCzJDNDYvCEoURncjNEut0AD42MU3xI+ZjwUwfOvR7eC4HDvF
   mgZaG21jsmyC8QH/ZIBjs3biu2xbdFX2VaUML+ra3hUO+g4ObzZa6iAhIiMkJSYn
   KCkqKywtLi8wMTIzNDU2Nzg5Ojs8PT4/
   -----END ML-KEM-768 PRIVATE KEY-----

   The following is an example of a ML-KEM-768 private key from the same
   seed.

   -----BEGIN ML-KEM-768 PRIVATE KEY-----
   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
   KCkqKywtLi8wMTIzNDU2Nzg5Ojs8PT4/
   -----END ML-KEM-768 PRIVATE KEY-----

   The following is an example of a ML-KEM-1024 private key from the
   same seed.

   -----BEGIN ML-KEM-768 PRIVATE KEY-----
   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
   KCkqKywtLi8wMTIzNDU2Nzg5Ojs8PT4/
   -----END ML-KEM-768 PRIVATE KEY-----

A.2.  Example Public Key

   The following is the ML-KEM-512 public key corresponding to the
   private key in the previous section.

   -----BEGIN PUBLIC KEY-----
   MIIDMjALBglghkgBZQMEBAEDggMhADmVgV5ZfRBDVc8pqlMzyTJRhp1bzb5IcST2
   Ari2pmwWxHYWSK12XPXYAGtRXpBafwrAdrDGLvoygVPnylcBaZ8TBfHmvG+QsOSb
   aTUSts6ZKouAFt38GmYsfj+WGcvYad13GvMIlszVkYrGy3dGbF53mZbWf/mqvJdQ
   Pyx7fi0ADYZFD7GAfKTKvaRlgloxx4mht6SRqzhydl0yDQtxkg+iE8lAk0Frg7gS
   Tmn2XmLLUADcw3qpoP/3OXDEdy81fSQYnKb1MFVowOI3ajdipoxgXlY8XSCVcuD8
   dTLKKUcpU1VntfxBPF6HktJGRTbMgI+YrddGZPFBVm+QFqkKVBgpqYoEZM5BqLtE
   wtT6PCwglGByjvFKGnxMm5jRIgO0zDUpFgqasteDj3/2tTrgWqMafWRrevpsRZMl
   JqPDdVYZvplMIRwqMcBbNEeDbLIVC+GCna5rBMVTXP9Ubjkrp5dBFyD5JPSQpaxU
   lfITVtVQt4KmTBaItrZVvMeEIZekNML2Vjtbfwmni8xIgjJ4NWHRb0y6tnVUAAUH
   gVcMZmBLgXrRJSKUc26LAYYaS1p0UZuLb+UUiaUHI5Llh2JscTd2V10zgGocjicy
   r5fCaA9RZmMxxOuLvAQxxPloMtrxs8RVKPuhU/bHixwZhwKUfM0zdyekb7U7oR3l
   y0GRNGhZUWy2rXJADzzyCbI2rvNaWArIfrPjD6/WaXPKin3SZ1r0H3oXthQzzRr4
   D3cIhp9mVIhJeYCxrBCgzctjagDthoGzXkKRJMqANQcluF+DperDpKPMFgCQPmUp
   NWC5szblrw1SnawaBIEZMCy3qbzBELlIUb8CEX8ZncSFqFK3Rz8JuDGmgx1bVMC3
   kNIlz2u5LZRiomzbM92lEjx6rw4moLg2Ve6ii/OoB0clAY/WuuS2Ac9huqtxp6PT
   UZejQ+dLSicsEl1UCJZCbYW3lY07OKa6mH7DciXHtEzbEt3kU5tKsII2NoPwS/eg
   nMXEHf6DChsWLgsyQzQ2LwhKFEZ3IzRLrdAA+NjFN8SPmY8FMHzr0e3guBw7xZoG
   WhttY7Js
   -----END PUBLIC KEY-----

   The following is the ML-KEM-768 public key corresponding to the
   private key in the previous section.

   -----BEGIN PUBLIC KEY-----
   MIIEsjALBglghkgBZQMEBAIDggShACmKoQ1CPI3aBp0CvFnmzfA6CWuLPaTKubgM
   pKFJB2cszvHsT68jSgvFt+nUc/KzEzs7JqHRdctnp4BZGWmcAvdlMbmcX4kYBwS7
   TKRTXFuJcmecZgoHxeUUuHAJyGLrj1FXaV77P8QKne9rgcHMAqJJrk8JStDZvTSF
   wcHGgIBSCnyMYyAyzuc4FU5cUXbAfaVgJHdqQw/nbqz2ZaP3uDIQIhW8gvEJOcg1
   VwQzao+sHYHkuwSFql18dNa1m75cXpcqDYusQRtVtdVVfNaAoaj3G064a8SMmgUJ
   cxpUvZ1ykLJ5Y+Q3Lcmxmc/crAsBrNKKYjlREuTENkjWIsSMgjTQFEDozDdskn8j
   pa/JrAR0xmInTkJFJchVLs47P+JlFt6QG8fVFb3olVjmJslcgLkzQvgBAATznmxs
   lIccXjRMqzlmyDX5qWpZr9McQChrOLHBp4RwurlHUYk0RTzoZzapGfH1ptUQqG9U
   VPw5gMtcdlvSvV97NrFBDWY1yM60fE3aDXaijqyTnHHDAkgEhmxxYmZYRCFjwsIh
   F+UKzvzmN4qYVlIwKk7wws4Mxxa3eW4ray43d9+hrD2iWaMbWptTD4y2OKgaYqww
   GEmrr5WnMBvaMAaJCb/bfmfbzLs4pVUaJbGjoPaFdIrVdT2IgPABbGJ0hhZjhMVX
   H+I2WQA2TQODEeLYdds2ZoaTK17GAkMKNp6Hpu9cM4eGZXglvUwFes65I+sJNeaQ
   XmO0ztf4CFenc91ksVDSZhLqmsEgUtsgF78YQ8y0sygbaQ3HKK36hcACgbjjwJKH
   M1+Fa0/CiS9povV5Ia2gGRTECYhmLVd2lmKnhjUbm2ZJPat5WU2YbeIQDWW6D/Tq
   WLgVONJKRDWiWPrCVASqf0H2WLE4UGXhWNy2ARVzJyD0BFmqrBXkBpU6kKxSmX0c
   zQcAYO/GXbnmUzVEZ/rVbscTyG51QMQjrPJmn1L6b0rGiI2HHvPoR8ApqKr7uS4X
   skqgebH0GbphdbRCr7EZCdSla3CgM1soc5IYqnyTSOLDwvPrPRWkHmQXwN2Uv+sh
   QZsxGnuxOhgLvoMyGKmmsXRHzIXyJYWVh6cwdwSay8/UTQ8CVDjhXRU4Jw1Ybhv4
   MZKpRZz2PA6XL4UpdnmDHs8SFQmFHLg0D28Qew+hoO/Rs2qBibwIXE9ct4TlU/Qb
   kY+AOXzhlW94W+43fKmqi+aZitowwmt8PYxrVSVMyWIDsgxCruCsTh67QI5JqeP4
   edCrB4XrcCVCXRMFoimcAV4SDRY7DhlJTOVyU9AkbRgnRcuBl6t0OLPBu3lyvsWj
   BuujVnhVwBRpn+9lrlTHcKDYXBhADPZCrtxmB3e6SxOFAr1aeBL2IfhKSClrmN1D
   IrbxWCi4qPDgCoukSlPDqLFDVxsHQKvVZ9rxzenHnCBLbV4lnRdmoxu7y05qBc9F
   AhdrMBwcL0Ekd1AVe87IXoCbMKTWDXdHzdD1uZqoyCaYdRd5OqqAgKCxJKhVjfcr
   vje3X07btr6CFtbGM/srIoDiURPYaV5DSBw+6zl+sZJQUim2eiAeqJPD4ssy2ovD
   QvpN6gV4
   -----END PUBLIC KEY-----

   The following is the ML-KEM-1024 public key corresponding to the
   private key in the previous section.

   -----BEGIN PUBLIC KEY-----
   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
   uYOILhF1
   -----END PUBLIC KEY-----

   The following example, in addition to encoding the ML-KEM-768 private
   key, has an attribute included as well as the public key:

     -----BEGIN PRIVATE KEY-----
     TODO insert example private key with attribute
     -----END PRIVATE KEY-------

A.3.  Example Certificate

     TODO insert ASN.1 Pretty Print

     -----BEGIN CERTIFICATE-----
     TODO Certificate
     -----END CERTIFICATE-------

Acknowledgments

   TODO acknowledge.

Authors' Addresses

   Sean Turner
   sn3rd
   Email: sean@sn3rd.com


   Panos Kampanakis
   AWS
   Email: kpanos@amazon.com


   Jake Massimo
   AWS
   Email: jakemas@amazon.com


   Bas Westerbaan
   Cloudflare
   Email: bas@westerbaan.name
